image: python:3.9


stages:
  - test
  - release


test-in-docker:
  image: docker
  stage: test
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_MERGE_REQUEST_IID
  script:
    - env | sort
    - ./dev-docker ./manage.py test -v 3


test-with-postgres:
  stage: test
  services:
    - postgres
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_MERGE_REQUEST_IID
  variables:
    POSTGRES_DB: squad
    POSTGRES_USER: squad
    POSTGRES_PASSWORD: squad
    POSTGRES_HOST_AUTH_METHOD: trust
    TZ: UTC
    PGTZ: UTC
    DATABASE: "ENGINE=django.db.backends.postgresql_psycopg2:NAME=squad:USER=squad:PASSWORD=squad:HOST=postgres:PORT=5432"
  script:
    - env | sort
    - apt update && apt install -y gettext
    - pip install -r requirements-dev.txt
    - ./manage.py test
    - ./manage.py compilemessages


release-gitlab:
  image: docker
  stage: release
  services:
    - docker:dind
  needs:
    - job: test-in-docker
    - job: test-with-postgres
  rules:
    - if: $CI_MERGE_REQUEST_IID
      when: on_success
  variables:
    IMAGE_TAG: "MR-${CI_MERGE_REQUEST_IID}"
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG


release-docker:
  image: docker
  stage: release
  services:
    - docker:dind
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+.*$/
      when: on_success

    - if: $CI_COMMIT_BRANCH == "master"
      when: on_success

    - when: never
  script:
    - env | sort
    - git fetch --tags
    - export TAG=latest
    - if [ "$CI_COMMIT_BRANCH" == "master" ]; then export TAG=master; else export TAG=${CI_COMMIT_TAG:1}; fi
    - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
    - docker build -t squadproject/squad:${TAG} .
    - docker push squadproject/squad:${TAG}


release-pypi:
  stage: release
  variables:
    SQUAD_RELEASE: 1
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+.*$/
      when: on_success

    - when: never
  script:
    - env | sort
    - python3 -m pip install --upgrade twine
    - ./scripts/build ${CI_COMMIT_TAG}
    - twine upload dist/*
